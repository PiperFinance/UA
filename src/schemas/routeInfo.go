package schemas

// Generated by https://quicktype.io

type IRouteInfo struct {
	AmountOut      string   `json:"amountOut"`
	AmountOutValue string   `json:"amountOutValue"`
	TotalGasFee    string   `json:"totalGasFee"`
	EstimateTime   int64    `json:"estimateTime"`
	Response       Response `json:"response"`
	Path           []Path   `json:"path"`
	Type           string   `json:"type"`
}

// NOTE - Majid's Parsed Result
type Tool struct {
	Title string `json:"title"`
	Logo  string `json:"logo"`
}

type SwapToken struct {
	Address  Address `json:"address"`
	ChainID  int64   `json:"chainId"`
	Symbol   CoinKey `json:"symbol"`
	Decimals int64   `json:"decimals"`
	Name     Name    `json:"name"`
	PriceUSD string  `json:"priceUSD"`
	LogoURI  string  `json:"logoURI"`
	CoinKey  CoinKey `json:"coinKey"`
}

type Path struct {
	FromToken SwapToken `json:"fromToken"`
	ToToken   SwapToken `json:"toToken"`
	Tool      Tool      `json:"tool"`
	Type      string    `json:"type"`
}

// NOTE - Provider's raw result

type Response struct {
	ID                     string            `json:"id"`
	FromChainID            int64             `json:"fromChainId"`
	FromAmountUSD          string            `json:"fromAmountUSD"`
	FromAmount             string            `json:"fromAmount"`
	FromToken              Token             `json:"fromToken"`
	ToChainID              int64             `json:"toChainId"`
	ToAmountUSD            string            `json:"toAmountUSD"`
	ToAmount               string            `json:"toAmount"`
	ToAmountMin            string            `json:"toAmountMin"`
	ToToken                Token             `json:"toToken"`
	GasCostUSD             string            `json:"gasCostUSD"`
	ContainsSwitchChain    bool              `json:"containsSwitchChain"`
	Steps                  []Step            `json:"steps"`
	Insurance              Insurance         `json:"insurance"`
	Tags                   []interface{}     `json:"tags"`
	OutputAmount           string            `json:"outputAmount"`
	OutputAmountMin        string            `json:"outputAmountMin"`
	OutputAmountUsd        float64           `json:"outputAmountUsd"`
	Swapper                Swapper           `json:"swapper"`
	From                   From              `json:"from"`
	To                     From              `json:"to"`
	Fee                    []Fee             `json:"fee"`
	FeeUsd                 float64           `json:"feeUsd"`
	AmountRestriction      AmountRestriction `json:"amountRestriction"`
	EstimatedTimeInSeconds int64             `json:"estimatedTimeInSeconds"`
	Path                   []ResponsePath    `json:"path"`
}

type AmountRestriction struct {
	Min  string `json:"min"`
	Max  string `json:"max"`
	Type string `json:"type"`
}
type From struct {
	Blockchain      string  `json:"blockchain"`
	Symbol          string  `json:"symbol"`
	Name            *string `json:"name"`
	IsPopular       bool    `json:"isPopular"`
	ChainID         string  `json:"chainId"`
	Address         *string `json:"address"`
	Decimals        int64   `json:"decimals"`
	Image           string  `json:"image"`
	BlockchainImage string  `json:"blockchainImage"`
	UsdPrice        float64 `json:"usdPrice"`
}
type Fee struct {
	Token       From   `json:"token"`
	ExpenseType string `json:"expenseType"`
	Amount      string `json:"amount"`
	Name        string `json:"name"`
}

type Swapper struct {
	ID           string   `json:"id"`
	Title        string   `json:"title"`
	Logo         string   `json:"logo"`
	SwapperGroup string   `json:"swapperGroup"`
	Types        []string `json:"types"`
}

type ResponsePath struct {
	Swapper                Swapper `json:"swapper"`
	SwapperType            string  `json:"swapperType"`
	From                   From    `json:"from"`
	To                     From    `json:"to"`
	InputAmount            string  `json:"inputAmount"`
	ExpectedOutput         string  `json:"expectedOutput"`
	EstimatedTimeInSeconds int64   `json:"estimatedTimeInSeconds"`
}

type Insurance struct {
	State        string `json:"state"`
	FeeAmountUsd string `json:"feeAmountUsd"`
}

type Step struct {
	Type          string         `json:"type"`
	ID            string         `json:"id"`
	Tool          string         `json:"tool"`
	ToolDetails   ToolDetails    `json:"toolDetails"`
	Action        Action         `json:"action"`
	Estimate      Estimate       `json:"estimate"`
	IncludedSteps []IncludedStep `json:"includedSteps"`
	Integrator    string         `json:"integrator"`
}

type Action struct {
	FromToken   Token   `json:"fromToken"`
	FromAmount  string  `json:"fromAmount"`
	ToToken     Token   `json:"toToken"`
	FromChainID int64   `json:"fromChainId"`
	ToChainID   int64   `json:"toChainId"`
	Slippage    float64 `json:"slippage"`
}

type Estimate struct {
	Tool              string    `json:"tool"`
	ApprovalAddress   string    `json:"approvalAddress"`
	ToAmountMin       string    `json:"toAmountMin"`
	ToAmount          string    `json:"toAmount"`
	FromAmount        string    `json:"fromAmount"`
	FeeCosts          []FeeCost `json:"feeCosts"`
	GasCosts          []GasCost `json:"gasCosts"`
	ExecutionDuration int64     `json:"executionDuration"`
	FromAmountUSD     *string   `json:"fromAmountUSD,omitempty"`
	ToAmountUSD       *string   `json:"toAmountUSD,omitempty"`
}

type FeeCost struct {
	Name        string `json:"name"`
	Description string `json:"description"`
	Percentage  string `json:"percentage"`
	Token       Token  `json:"token"`
	Amount      string `json:"amount"`
	AmountUSD   string `json:"amountUSD"`
	Included    bool   `json:"included"`
}

type GasCost struct {
	Type      string `json:"type"`
	Price     string `json:"price"`
	Estimate  string `json:"estimate"`
	Limit     string `json:"limit"`
	Amount    string `json:"amount"`
	AmountUSD string `json:"amountUSD"`
	Token     Token  `json:"token"`
}

type IncludedStep struct {
	ID          string      `json:"id"`
	Type        string      `json:"type"`
	Action      Action      `json:"action"`
	Estimate    Estimate    `json:"estimate"`
	Tool        string      `json:"tool"`
	ToolDetails ToolDetails `json:"toolDetails"`
}

type ToolDetails struct {
	Key     string `json:"key"`
	Name    string `json:"name"`
	LogoURI string `json:"logoURI"`
}

type (
	Address string
	CoinKey string
	Name    string
)
